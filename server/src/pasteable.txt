CREATE TABLE public.login(
 login_id serial PRIMARY KEY,
 username VARCHAR (50) UNIQUE NOT NULL,
 email VARCHAR (355) UNIQUE NOT NULL,
 hash VARCHAR (100) NOT NULL
);

CREATE TABLE public.user(
 user_id serial PRIMARY KEY,
 username VARCHAR (50) UNIQUE NOT NULL,
 name VARCHAR (50) NOT NULL,
 email VARCHAR (355) UNIQUE NOT NULL,
 created_on TIMESTAMP NOT NULL,
 last_updated TIMESTAMP,
 last_login TIMESTAMP
);

CREATE TABLE public.project(
 project_id serial PRIMARY KEY,
 user_id INTEGER REFERENCES public.user(user_id),
 project_name VARCHAR (50) NOT NULL,
 created_on TIMESTAMP NOT NULL,
 last_updated TIMESTAMP
);

CREATE TABLE public.task(
 task_id serial PRIMARY KEY,
 project_id INTEGER REFERENCES public.project(project_id),
 description VARCHAR(355),
 difficulty VARCHAR(50),
 created_on TIMESTAMP NOT NULL,
 last_updated TIMESTAMP
);

CREATE TABLE public.backlog(
 backlog_id serial PRIMARY KEY,
 project_id INTEGER REFERENCES public.project(project_id),
 title VARCHAR(355),
 is_sprint BOOLEAN,
 last_updated TIMESTAMP,
 created_on TIMESTAMP NOT NULL
);

CREATE TABLE public.backlog_task(
 backlog_task_id serial PRIMARY KEY,
 backlog_id INTEGER REFERENCES public.backlog(backlog_id),
 task_id INTEGER REFERENCES public.task(task_id),
 title VARCHAR(355),
 category VARCHAR(355),
 order_index INTEGER,
 progress VARCHAR(100),
 last_updated TIMESTAMP
);

CREATE TABLE public.assignment(
 assignment_id serial PRIMARY KEY,
 user_id INTEGER REFERENCES public.user(user_id),
 backlog_task_id INTEGER REFERENCES public.backlog_task(backlog_task_id),
 description VARCHAR(355)
);